#!/usr/bin/env bash
# Script based off: https://github.com/bcgov/von-network/blob/main/manage
set -eo pipefail

function print_usage {
    cat <<EOF
Manage infrastructure for the Identity Management framework.
Instantiates Orion Database Node, VON-network for Indy nodes and PostgreSQL storage for individual nodes.

Usage:
    setup:
        Instantiate all infrastructure related services.
        sub-option: 'node' when passed, runs only node specific setup
    teardown:
        Stop all infrastructure related services.
        sub-option: 'node' when passed, runs only node specific teardown
    restart:
        Runs 'teardown' and then 'setup', restarting the infrastructure.
        sub-option: 'node' when passed, runs only node specific restart
    clean:
        Cleanup docker related files, needs to be done periodically in development because of unused volumes.
    help:
        Print the usage.
EOF
}

cmd=$1
option=$2
# export DOCKERHOST=172.30.101.208
export DOCKERHOST=172.24.136.53

if [[ -n $option && $option != 'node' ]]; then
    echo "Unknown sub-option $option"
    echo
    print_usage
    exit 1
fi

case $cmd in
    setup)
        ./scripts/setup.sh "$option"
        ;;
    teardown)
        ./scripts/teardown.sh "$option"
        ;;
    restart)
        ./scripts/teardown.sh "$option" && ./scripts/setup.sh "$option"
        ;;
    clean)
        printf "Cleaning Docker ...\n\n"
        printf "ATTENTION: This invokes docker system prune, running system wide cleaning\n\n"
        docker system prune
        ;;
    help)
        print_usage
        ;;
    *)
        echo "Unknown Option $cmd"
        echo
        print_usage
        exit 1
        ;;
esac
